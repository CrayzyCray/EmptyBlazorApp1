@page "/"

@using EmptyBlazorApp1.Services
@using EmptyBlazorApp1.Components

@inject AccountService AccountService
@inject IDialogService DialogService

<MudStack Class="mb-56" Spacing="0">
    @switch (currentPage) {
        case Pages.Calendar:
                    <CalendarComponent/>
            break;
        case Pages.Communities:
                    <CommunitiesComponent/>
            break;
        case Pages.Profile:
                    <ProfileComponent/>
            break;
        case Pages.Login:
                    <LoginComponent Callback="@_loginComponentCallback"/>
            break;
    }
    <MudElement Class="mb-16"/>
</MudStack>

<MudAppBar Elevation="0" Bottom="true">
    <MudSpacer/>
    <MudIconButton Icon="@Icons.Material.Filled.CalendarToday" Color="currentPage == Pages.Calendar ? Color.Primary : Color.Default" OnClick="NavigateToCalendar"/>
    <MudSpacer/>
    <MudIconButton Icon="@Icons.Material.Filled.Dashboard" Color="currentPage == Pages.Communities ? Color.Primary : Color.Default" OnClick="NavigateToCommunities"/>
    <MudSpacer/>
    <MudIconButton Icon="@Icons.Material.Filled.AccountCircle" Color="currentPage == Pages.Profile ? Color.Primary : Color.Default" OnClick="NavigateToProfile"/>
    <MudSpacer/>
</MudAppBar>

@code {
    Action? _loginComponentCallback;

    enum Pages {
        Calendar,
        Communities,
        Profile,
        Login
    }

    void NavigateToCommunities() {
        Navigate(Pages.Communities);
    }

    void NavigateToCalendar() {
        Navigate(Pages.Calendar);
    }

    void NavigateToLogin() {
        var page = currentPage;
        _loginComponentCallback = () => Navigate(page);
        Navigate(Pages.Login);
    }

    void NavigateToProfile() {
        if (AccountService.IsAuthorized()) {

            Navigate(Pages.Profile);
        } else {
            var parameters = new DialogParameters<Dialog>();
            parameters.Add("ContentText", "Для просмотра этой страницы требуется регистрация");
            parameters.Add("ButtonText", "Регистрация");
            parameters.Add("Callback", () => NavigateToLogin());
            DialogService.Show<Dialog>("Требуется регистрация", parameters);
        }
    }

    Pages currentPage = Pages.Communities;

    void Navigate(Pages page) {
        if (page == currentPage) {
            return;
        }
        currentPage = page;
        StateHasChanged();
    }
}