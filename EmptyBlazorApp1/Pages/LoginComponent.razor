@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using MudBlazor
@using EmptyBlazorApp1.Services
@using EmptyBlazorApp1.Entities
@using System.Security.Cryptography;
@using System.Text;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@page "/login/{RedirectTo}"

@inject AccountService AccountService
@inject NavigationManager Navigation

@inject IHttpContextAccessor HttpContextAccessor
@inject ProtectedLocalStorage ProtectedLocalStorage


<MudTabs Elevation="4" Rounded="true" Centered="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
    <MudTabPanel Text="Login">
        <MudStack>
            <MudTextField @bind-Value="Login" Label="Login" Variant="Variant.Filled"></MudTextField>
            <MudTextField @bind-Value="Password" Label="Password" Variant="Variant.Filled"></MudTextField>
            <MudButton OnClick="LoginButtonOnClick" Variant="Variant.Filled" Color="Color.Primary">Login</MudButton>
            @if (errorMessage is not null) {
                <MudAlert Severity="Severity.Error">@errorMessage</MudAlert>
            }
        </MudStack>
    </MudTabPanel>
    <MudTabPanel Text="Register">
        <MudStack>
            <MudTextField @bind-Value="Login" Label="Login" Variant="Variant.Filled"></MudTextField>
            <MudTextField @bind-Value="Password" Label="Password" Variant="Variant.Filled"></MudTextField>
            <MudButton OnClick="RegisterButtonOnClick" Variant="Variant.Filled" Color="Color.Primary">Register</MudButton>
            @if (errorMessage is not null) {
                <MudAlert Severity="Severity.Error">@errorMessage</MudAlert>
            }
        </MudStack>
    </MudTabPanel>
</MudTabs>

@code {
    [Parameter]
    public string RedirectTo { get; set; } = "/";
    public string Login { get; set; } = string.Empty;
    public string Password { get; set; } = string.Empty;

    string? errorMessage = null;

    private void LoginButtonOnClick() {
        var (success, errorString) = AccountService.TryAuthorize(Login, Password);
        if (success) {
            Navigation.NavigateTo(RedirectTo);
        }
        else {
            Console.WriteLine(errorString);
        }
        errorMessage = errorString;
    }

    private void RegisterButtonOnClick() {
        var (success, errorString) = AccountService.TryRegister(Login, Password);
        if (success) {
            Navigation.NavigateTo(RedirectTo);
        }
        else {
            Console.WriteLine(errorString);
        }
        errorMessage = errorString;
    }

}