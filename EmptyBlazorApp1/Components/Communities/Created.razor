@using MudBlazor
@using EmptyBlazorApp1.Services
@using EmptyBlazorApp1.Components.Misc
@using EmptyBlazorApp1.Entities

@inject DbService Db
@inject AuthenticationService AS
@inject NavManager NavManager

<MudButton
    OnClick="() => NavManager.NavigateTo(typeof(Create))"
    FullWidth="true"
    Variant="Variant.Outlined"
    Color="Color.Success">
    Создать сообщество
</MudButton>

@if (communities is not null) {
    @foreach (var community in communities) {
        <СommunityCard Community="community"/>
    }
}

@code {

    [CascadingParameter]
    public List<CommunityHashTag>? SelectedHashTags { get; set; }

    List<Community>? communities;

    protected override void OnParametersSet() {
        var user = AS.GetUserWithProfile();
        if (user is null)
            return;
        communities = Db.GetCreatedCommunities(user);
        if (SelectedHashTags.Count > 0) {
            var t = communities;
            communities = new();
            foreach (var c in t) {
                Db.LoadTags(c);
                if (c.HashTags is null) {
                    continue;
                }
                bool suitable = true;
                foreach (var selectedHashTag in SelectedHashTags) {
                    if (!c.HashTags.Contains(selectedHashTag)) {
                        suitable = false;
                        break;
                    }
                }
                if (suitable) {
                    communities.Add(c);
                }
            }
        }
    }

    public override string ToString() {
        return "Созданные";
    }
}
