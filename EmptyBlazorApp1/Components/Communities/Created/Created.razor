@using MudBlazor
@using EmptyBlazorApp1.Services
@using EmptyBlazorApp1.Components.Misc
@using EmptyBlazorApp1.Entities

<DynamicComponent Type="_currentPage" Parameters="@_componentsParameters.GetValueOrDefault(_currentPage)"/>

@code {
    Type _currentPage = typeof(ListCommunities);
    Dictionary<Type, Dictionary<string, object>> _componentsParameters;
    [Parameter] public Action? SHC { get; set; }

    protected override void OnParametersSet() {
        _componentsParameters = new() {
                                          {
                                              typeof(ListCommunities), 
                                              new() {
                                                        {
                                                            "NavigateToCreate", 
                                                            () =>
                                                            {
                                                                _currentPage = typeof(Create);
                                                                SHC?.Invoke();
                                                                StateHasChanged();
                                                            } 
                                                        }
                                                    }
                                          },
                                          {
                                              typeof(Create),
                                              new() {
                                                        {
                                                            "NavigateToList",
                                                            () =>
                                                            {
                                                                _currentPage = typeof(ListCommunities);
                                                                SHC?.Invoke();
                                                                StateHasChanged();
                                                            }
                                                        }
                                                    }
                                          }
                                      };
    }

    public override string ToString() {
        return "Созданные";
    }

}
